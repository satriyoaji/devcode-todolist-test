version: '3'
services:
  app:
    container_name: full_app
    build: .
    ports:
      - 3030:3030
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      - fullstack-mysql

  fullstack-mysql:
    image: mysql
    container_name: full_db_mysql
    ports:
      - 3307:3307
    environment:
      - MYSQL_HOST=${MYSQL_HOST_DOCKER}
      - MYSQL_USER=${MYSQL_USER_DOCKER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD_DOCKER}
      - MYSQL_DBNAME=${MYSQL_DBNAME_DOCKER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD_DOCKER}
      - MYSQL_PORT=${MYSQL_PORT_DOCKER}
    volumes:
      - database_mysql:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_container
    depends_on:
      - fullstack-mysql
    environment:
      - PMA_HOST=fullstack-mysql # Note the "fullstack-mysql". Must be the name of what you used as the mysql service.
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_PASSWORD_DOCKER}
    ports:
      - 9090:80
    restart: always

  migrate:
    image: migrate/migrate
    volumes:
      - ./database/migrations:/database/migrations
    command: ["-path", "/migrations", "-database",  "mysql://root:password@tcp(fullstack-mysql:3306)/todolist_challenge?parseTime=True&loc=Local", "-verbose", "up"]
    links:
      - fullstack-mysql
    depends_on:
      - fullstack-mysql

volumes:
  api:
  database_mysql:

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge